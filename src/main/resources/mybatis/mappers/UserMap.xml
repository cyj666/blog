<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.UserMapper">
	 <cache type="com.blog.cache.MybatisRedisCache" />
	 
 <resultMap id="userMap" type="com.blog.pojo.User">  
    <id property="userId" column="user_id"/>  
    <result property="username" column="username"/>  
    <result property="password" column="password"/>  
    <result property="locked" column="locked"/>  
    <result property="status" column="status"/> 
    <result property="lastVisit" column="last_visit"/> 
    <result property="lastIp" column="last_ip"/> 
    <!-- 进行 多表关联插叙，先关联user和role -->  
    <collection property="roleSet" column="role_id" ofType="com.blog.pojo.Role">  
    <id property="id" column="role_id"/>  
    <result property="name" column="role_name"/>  
    <!-- 再在role中关联role和permission -->  
    <collection property="permissionSet" column="permission_id" ofType="com.blog.pojo.Permission">  
    <id property="id" column="permission_id"/>  
    <result property="name" column="permission_name"/>  
    </collection>  
    </collection>  
      
    </resultMap> 
    
    <resultMap id="userPostMap" type="com.blog.pojo.User">  
    <id property="userId" column="user_id"/>  
    <result property="username" column="username"/>  
    <result property="password" column="password"/>  
    <result property="locked" column="locked"/>  
    <result property="status" column="status"/> 
    <result property="lastVisit" column="last_visit"/> 
    <result property="lastIp" column="last_ip"/>  
    <!-- 进行 多表关联插叙，先关联user和role -->  
    <collection property="posts" ofType="com.blog.pojo.Post">  
    <id property="postId" column="post_id"/>  
    <result property="postType" column="post_type"/>  
    <result property="postTitle" column="post_title"/>
    <result property="postText" column="post_text"/>
    <result property="createTime" column="create_time"/>
    </collection>       
    </resultMap>   

	<select id="getUser" resultType="User" parameterType="user">
		select user_id,username,password,status,locked,credit,last_visit,last_ip from users
		<where>
		<if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and username = #{username}
        </if>
		</where>
	</select> 
	
	<select id="getUsers" resultType="User" parameterType="user">
		select user_id,username,password,status,locked,credit,last_visit,last_ip from users
		<where>
		<if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and username = #{username}
        </if>
		</where>
	</select> 
	
	<select id="getAllUser" resultType="User" >
		select user_id,username,password,status,locked,credit,last_visit,last_ip from users		
	</select> 
	
	<select id="getUserLinkPost" resultMap="userPostMap" parameterType="user">
		SELECT *
		FROM users u 
		LEFT JOIN users_posts up ON u.user_id = up.user_id
		LEFT JOIN posts p ON up.post_id = p.post_id
		<where>
		<if test="userId != null and userId !='' ">
       	and u.user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and u.username = #{username}
        </if>
		</where>
	</select> 

	


	<insert id="addUser" useGeneratedKeys="true" keyProperty="user_id" parameterType="user">
		insert into
		users(username,password,status,locked,credit,last_visit,last_ip)
		values(#{username},#{password},#{status},#{locked},#{credit},#{lastVisit},#{lastIp})
	</insert>
	
	<insert id="addUserPost" useGeneratedKeys="true" parameterType="int">
		insert into
		users_posts(user_id,post_id)
		values(#{userId},#{postId})
	</insert>


	<delete id="deleteUser" parameterType="user">
        delete  from users 
		<where>
        <if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and username = #{username}
        </if>
        </where>
    </delete>
    
    <delete id="deleteUserPost" parameterType="int">
        delete  from users_posts
		<where>
        <if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and post_id = #{postId}
        </if>
        </where>
    </delete>
    
    <update id="updateUser" parameterType="user">
    update users
    <set>
    	<if test="username != null and username !=''">
    	username = #{username},
    	</if>
    	<if test="password != null and password !=''">
    	password = #{password},
    	</if>
    	<if test="status != null and status !=''">
    	status = #{status},
    	</if>
    	<if test="locked != null and locked !=''">
    	locked = #{locked},
    	</if>
    	<if test="credit != null and credit !=''">
    	credit = #{credit},
    	</if>
    	<if test="lastVisit != null and lastVisit !=''">
    	last_visit = #{lastVisit},
    	</if>
    	<if test="lastIp != null and lastIp !=''">
    	last_ip = #{lastIp}
    	</if>
    </set>
    <where>
    	user_id =#{userId}
    </where>  
    </update>
    
    
	<select id="findUserByUsernameLinkRoleAndPermission" resultMap="userMap" parameterType="String">
	SELECT *
	FROM users u 
	LEFT JOIN users_roles ur ON u.user_id = ur.user_id 
	LEFT JOIN roles r ON r.role_id = ur.role_id
	LEFT JOIN roles_permissions rp ON rp.role_id = r.role_id
	LEFT JOIN permissions p ON p.permission_id = rp.permission_id
	WHERE u.username = #{username}
	</select>
	
	

</mapper>