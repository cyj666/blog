<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.UserMapper">
	 <cache type="com.blog.cache.MybatisRedisCache" />
	 
 <resultMap id="userMap" type="com.blog.pojo.User">  
    <id property="userId" column="user_id"/>  
    <result property="username" column="username"/>  
    <result property="password" column="password"/>  
    <result property="status" column="status"/> 
    <!-- 进行 多表关联插叙，先关联user和role -->  
    <collection property="roleSet" column="role_id" ofType="com.blog.pojo.Role">  
    <id property="id" column="role_id"/>  
    <result property="name" column="role_name"/>  
    <!-- 再在role中关联role和permission -->  
    <collection property="permissionSet" column="permissionid" ofType="com.blog.pojo.Permission">  
    <id property="id" column="permission_id"/>  
    <result property="name" column="permission_name"/>  
    </collection>  
    </collection>  
      
    </resultMap>  

	<select id="getUser" resultType="User" parameterType="user">
		select user_id,username,password,status,locked,credit,last_visit,last_ip from users
		<where>
		<if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and username = #{username}
        </if>
		</where>
	</select> 
	
	<select id="getAllUser" resultType="User" parameterType="user">
		select user_id,username,password,status,locked,credit,last_visit,last_ip from users		
	</select> 
	
	
	<insert id="addUser" useGeneratedKeys="true" parameterType="user">
		insert into
		users(username,password,status,locked,credit,last_visit,last_ip)
		values(#{username},#{password},#{status},#{locked},#{credit},#{last_visit},#{last_ip})
	</insert>


	<!--<select id="simpleUserFind" resultType="User">
		select * from users where
		username = #{username}
	</select> -->
	
	<!--<delete id="deleteUser" parameterType="int">
        delete u,ur from users u,user_roles ur where u.user_id = ur.user_id AND u.user_id = #{id}
    </delete>-->

	<delete id="deleteUser" parameterType="user">
        delete  from users 
		<where>
        <if test="userId != null and userId !='' ">
       	and user_id = #{userId}
        </if>
        <if test="username != null and username !='' ">
       	and username = #{username}
        </if>
        </where>
    </delete>
    
    <update id="updateUser" parameterType="user">
    update users
    <set>
    	<if test="username != null and username !=''">
    	username = #{username},
    	</if>
    	<if test="password != null and password !=''">
    	password = #{password},
    	</if>
    	<if test="status != null and status !=''">
    	status = #{status},
    	</if>
    	<if test="locked != null and locked !=''">
    	locked = #{locked},
    	</if>
    	<if test="credit != null and credit !=''">
    	credit = #{credit},
    	</if>
    	<if test="lastVisit != null and lastVisit !=''">
    	last_visit = #{lastVisit},
    	</if>
    	<if test="lastIp != null and lastIp !=''">
    	last_ip = #{lastIp}
    	</if>
    </set>
    </update>
	<!-- <select id="findUserByUsernameAll" resultMap="User">
	SELECT *
	FROM users u 
	LEFT JOIN user_roles ur ON u.user_id = ur.user_id 
	LEFT JOIN roles r ON r.role_id = ur.role_id
	LEFT JOIN roles_permissions rp ON rp.role_id = r.role_id
	LEFT JOIN permissions p ON p.permission_id = rp.permission_id
	WHERE u.username = #{username}
	</select>-->
	
	<!-- <select id="findUserByUsername" resultType="User">
	select user_id,username,password,status,locked from users where
		username = #{username}
	</select>-->
	
	<!--  SELECT username,role_name,`status`,role_desc as roles,permission_name as permissions
	FROM users u 
	LEFT JOIN user_roles ur ON u.user_id = ur.user_id 
	LEFT JOIN roles r ON r.role_id = ur.role_id
	LEFT JOIN roles_permissions rp ON rp.role_id = r.role_id
	LEFT JOIN permissions p ON p.permission_id = rp.permission_id
	WHERE u.username = #{username}-->

</mapper>